
public class HW02_4110056015_2 extends FourSum {

	public static void main(String[] args) {
		int[] A = {-8596, 2694, -7408, -1432, -6872, -8794, -1178, -7226, -1761, 2481, -529, -7201, 1050, 4818, -9538, -1033, 7529, -2586, -9275, -6558, -6525, -130, -2432, -3224, 5877, -6549, 6521, -3777, 9078, -8870, 9142, -944, 67, 9616, -8973, -886, 7271, 2035, 2744, -7380, 8500, -1166, 2093, -4380, -1824, 2861, 9633, 5915, 421, -9327, -5245, 3066, 4226, 8369, -879, 601, 8874, 9217, 1247, 6959, 3025, -9116, -3685, -3264, -7378, 8069, -5736, 178, -4063, -7915, -9874, -5949, -3037, 8299, 3309, 6362, -1666, -2264, -5643, 1265, -7293, -914, 1384, -2724, -973, 5659, 1237, 7963, 6006, -4449, 9967, -5728, -5912, -8585, -6510, 375, 695, -8681, 420, 6211, 6423, 8182, 9164, -1370, -2573, -7534, -4080, -2010, 6238, 6860, -94, -5813, 6298, -5557, 5744, -5185, 3886, 8380, 2358, 7727, -2287, 4868, 7153, 6641, -3807, 822, 9176, -9577, 8067, -6642, 4599, -4803, -6528, -7113, 5405, 6859, 2390, 5521, -1225, 8387, -1194, -4802, -7659, -9668, 9123, 7264, -6141, -5364, 1860, -7828, 9278, -2433, 6904, -9110, -1106, -1450, 5092, -9286, -2071, -509, 1057, 9509, -8941, -5876, -2247, -5003, -3067, -8149, 5251, -1511, 1166, 2, 1841, -3206, -2359, 987, 8837, 9840, -9154, 5633, -667, -7262, -3360, 9917, -9418, -1705, -8390, -8819, -2346, -7676, -3183, -7385, 9805, 8008, 556, -1723, -6418, -6321, 8135, -7912, -6035, -8442, -239, 4695, -9250, 6570, -7504, 5533, 2418, 8596, 6960, -3831, -2879, 2972, 1626, 3319, -4998, -7125, 882, -7038, -6937, 9453, -8513, -5812, -3381, 1168, 5542, 7692, -722, 1670, 569, 600, -8105, -8731, 7294, 3123, 941, 2748, -898, -6009, 8389, 5805, -6279, 6982, -3578, 133, 3158, 1291, -5896, -5442, -9710, -8343, -781, 1073, -4560, 8093, -4453, -2619, 637, 7164, -1775, 6010, 8255, -3469, -5883, -7816, 2300, 3965, 7994, 700, -4405, 1491, -5213, -9990, -5569, -2985, 3290, 8629, 2223, -5880, -3332, 8903, 1296, 4931, 5680, 2004, 3727, -7868, -315, -3503, -5244, 8642, -532, 6673, 3164, 5364, -8271, -4958, -6081, 2058, -4752, 9966, -4162, 9359, -2589, 8285, 4853, -8366, 9210, 4332, 8729, 1698, -4573, 9730, 6701, -7595, -4861, -4386, 90, -7192, -1520, 6714, 2837, 9531, 1708, -5749, 7111, 1678, 4084, 3397, 3905, 7748, -9574, 1135, -5447, -8913, -883, 820, 2517, 6353, 3567, 514, 1945, -8350, -7395, -6567, -955, 4366, -3361, 3220, 4902, 8977, 8757, -692, 2904, 8753, 7588, -9704, 5082, 2406, -6775, -6902, 672, -9557, -8767, 1709, 6309, 6430, -6894, 5124, -8967, -4239, -6780, 4907, -6798, 6869, 6739, -4547, 8997, 9736, -9451, 3543, -8490, 6997, 4791, 3006, 7808, 985, 4578, 2289, 720, 5576, 8386, -2283, -3129, 5308, 4057, -7473, 2954, -8340, -4397, -8680, 1866, -3121, -236, -3687, -1924, -9539, -983, -8085, -966, -6357, -7249, -4276, 9274, -159, 4324, 4836, -4507, 3032, 6977, 7311, -3228, -8257, -335, -7119, -7575, -6420, 1443, 3134, 1960, -4168, 4830, -3243, -4463, -3152, 8659, 6646, 428, 2852, 4531, -6446, -4282, -3885, 623, -3229, 2732, 4803, -9302, -2730, 8303, 1061, 935, -3418, 4653, -6887, 5831, -468, 8463, 135, 1999, -9806, -4994, 9311, -9263, -4183, 3658, -9106, -1331, -1611, 7597, -2934, 8949, 6276, -3046, -6779, -1661, 2613, 5792, 8171, -6054, 9119, 7709, 8202, 215, 5522, -5691, 2826, -8616, 6593, -8688, -3838, -8017, 5232, -6542, -6954, -2849, 8005, -861, -2173, 6984, 2752, -4918, 7931, 8560, 4733, 2438, -4906, -6540, -2239, 3356, 7436, 1949, -864, -3553, -6583, -2130, 2962, 4328, 2946, -5240, 5139, 7024, -2930, -3042, -5700, 4564, -7639, -8714, 4380, -9056, 8555, 1814, -6150, -3120, -4081, 5912, 6763, -4990, -6260, 4166, 3185, -984, 7776, 6929, -1522, 4982, 2470, 4801, -3654, 1342, 6830, 3068, -9461, -5665, 8150, -4913, -457, -6147, 5546, 646, 9652, 496, 8157, 7451, -2576, -9972, 5049, -9107, 7814, 6662, 8672, -7141, 126, -8381, 7828, -2298, -8074, -240, -4965, 9665, 4604, 6425, 262, 4918, -7082, -7459, -1491, 7948, -1660, 3625, 7860, 7758, 2947, 7942, 2691, -5989, -9026, 1009, 2447, -4358, 3215, -2622, -4993, -446, 5001, 4048, 4023, 4498, -5526, -8578, 4536, -9868, -2665, -7098, -1720, -8675, -3865, -4200, 6605, 3092, 1915, 3467, 7837, -6975, 4171, 7460, 938, 42, 5775, -8250, -255, 4525, 2144, 8415, -2600, 9444, -7771, -2759, 4608, -6449, 5145, 2490, -822, 6026, 4257, 8953, -9438, -7597, 5991, -7754, 6798, 5543, 3524, 3151, 3210, 3287, 8546, -4783, -4277, -5315, 8484, 1293, 3056, -7800, 4642, -8643, 8368, 8905, 2976, 1759, -6363, -9162, -2921, -4041, -4593, 4154, -4980, 9841, -4534, 3990, 3358, 5873, 2086, 7635, 9001, 3877, -3282, 4706, -4552, 7410, 5454, -628, -9136, -6094, -5951, 1404, 2114, -5983, -5853, 5013, 9527, 7919, -4816, 1328, 189, 6486, -7988, 2040, -4052, -3906, -2391, 9463, -6051, -303, -6393, -9851, 5065, 559, 6576, -9588, 5789, -2385, 2009, 2993, -1099, 5959, 359, 5734, -6058, 1228, -9744, -9586, 2139, 9535, 8908, -1929, 7950, -5238, -9303, 1793, -5930, 1409, 2087, 2051, 6654, -8918, -6352, 3463, -3049, 3197, -2488, 1239, -3080, 4929, 3613, 3230, 5841, 6846, 2143, -47, -3135, -645, -2215, 5017, 4210, 3020, 6721, -4006, 719, -7904, -3861, -193, 9239, -2518, 9842, 7018, 1936, 8181, 6329, 479, 9442, -7146, -7025, -9071, -4502, -4461, -4468, -1969, 3235, 3131, 5711, -120, 8922, -9786, -3266, 9586, 6028, 8151, -4521, 2094, -9274, 708, -269, 4584, 3925, 7171, 2678, -7210, -4869, 8636, 4491, -2281, -1255, -6998, 8347, 982, -6806, -2059, 7705, -7069, 5818, -2026, -5043, 1292, 4636, 8664, 1183, -8342, -4689, -9064, -6874, 2362, -8227, -6182, 2986, 2350, -1451, -3185, 6339, 1922, -1731, 6787, 6360, 424, 7861, -5032, -5252, -9502, -5552, -6847, 5884, 7666, -7238, 2710, 4717, -9507, -3825, 3565, -9917, 87, -4878, -1114, -9529, 4917, -794, -6678, 2107, -224, -6168, 9820, 5055, -915, 2998, 3414, 9567, -2826, 6847, 2363, 174, -1436, -2232, 8919, -2504, 3827, -1846, -2290, 3830, 5485, 2318, -742, -982, -4086, -8152, 2864, 9013, -3149, -337, -9523, -753, 7987, 6503, -8515, -9500, 2167, -3863, -3730, -2564, -4359, -3735, -3184, 4381, -8763, 664, -6670, -2946, 3174, -93, -3321, 4945, 545, -1198, 7708, 915, -9978, -8741, 1294, -6463, -6183, 1898, -8769, 8521, -5445, 4300, 5174, 2444, -4915, 3329, 6584, -1898, 8550, 7636, -9713, 5627, -3641, -2805, 5791, -7419, -3138, -1097, -5124, 6268, -7158, -259, -5160, 9931, -2036, -4443, -8087, -4727, -1071, 1819, -9658, 6347, 4265, 1105, 6975, 5996, -2520, 8472, 9713, 5307, 898, -787, 2832, -3179, -4748, 609, 834, 8751, -5616, -6965, -4002, -1489, 4343, 924, -9377, 5559, -9194, 9706, 2392, 7567, -9563, 5882, -1466, -3269, -5403, -6157, 6040, 6453, 1935, 8815, -1853, 5324, 3297, 8294, 8101, 6158, 3629, -6563, 6772, 1932, -4537, -5099, 495, 4218, -8618, -2477, -1042, 6454, -4826, -555, -8900, -400, -3684, 2292, 5876, 4819, 9952, -815, 5159, 9182, 4776, 1823, 572, 7393, -5869, -7349, -5169, -6811, -3656, -5292, 2476, 3237, -8882, -1944, 2630, -5903, -9042, 5784, -8738, -8801, -1463, -6027, 6191, 7718, -1158, 3574, -5092, -4589, -7068, 8136, 4831, -3683, -2508, -3915, 8159, -9234, -6330, -1318, 2030, -7605, 2649, 4627, -9670, -1383, -2954, 8288, -2188, -6203, -9562, 973, 7539, -5018, -7852, 5880, 4183, -6882, 8736, 3009, -3444, -5619, -3946, -2079, 3514, -9139, -970, -2311, 1323, 1833, 3750, 8890, -3007, 4006, -8828, -78, 3978, 7267, -3600, -6608, -4606, 7634, -3085, 8845, 88, -3316, -7004, -2825, -7510, -4278, 5222, 5719, -467, -6524, -1360, 995, -6431, -1102, 6408, -9065, 4881, -7131, 3848, 5388, -9256, 3930, 532, -5349, 3515, -1851, 5668, -5815, -868, -9879, -1047, -3330, 8655, 7348, 1162, 5660, -2776, -3776, -1694, -45, 5121, 4686, -3466, 2609, 6157, 6553, 1423, 5244, 9032, -637, 1771, 5356, 4682, -8084, 2522, 7067, -2772, 6301, -5098, -1641, 5464, 2327, -9322, 2369, -9924, -3967, 8361, -5849, 9746, -7536, -7907, 5079, 4315, 5459, 2574, -7239, 9073, 6877, -6512, 5796, -9361, 8385, 934, 502, -707, 6855, 6141, 6750, -2787, 7926, -9908, 1041, 6421, 2632, -198, -3288, -5476, 9697, 5845, 186, 8098, -4370, 5852, -5636, -9387, 901, 2466, -7919, -9708, 4100, -6460, 5005, -8072, 6044, -6297, 5467, -6068, -4390, -2335, -6844, 8741, 4075, -9944, -9947, -6991, 778, 5462, 6866, -6351, -9237, 2088, -3096, -4454, 7502, -5945, 5183, 5888, 6136, -5692, -7008, -8937, -302, 4789, 3929, 9666, -5307, -9572, -3963, -4038, -2485, 9640, -8404, -1392, -9218, -564, -8965, 4272, -1607, -4567, -3109, 330, 3941, -9888, 1066, 8534, -9142, -5400, -3100, -5895, 6318, 4434, -6860, -5011, -1415, -9232, 5354, 3053, -6004, -466, -6226, 8650, 4822, -3073, -6931, 346, -9544, 9084, -9020, -7528, 9573, 9467, -6532, -9304, 1316, -5493, -6400, 8169, -8408, -8503, 8273, 6595, 4748, -8815, -6257, -1951, -3106, -5997, 2339, -5397, -4591, 2118, -8207, 6710, -2110, 619, 3484, 3878, -3256, -5796, 887, 7186, -9937, 2329, -4554, 6918, 6330, -6732, -6488, 1339, -8559, 2801, -568, -5317, -5969, -874, -5004, -2431, -298, 2978, 2451, 3604, -1722, 6704, -5580, 4279, 344, 3147, 3551, -365, -6493, 7048, -846, -7079, -9561, 6529, -8355, 1972, -9342, 4309, 9004, -3055, -4294, -7465, -7051, 3665, 6023, 6267, -1441, -7439, -4707, 2615, 9342, -1817, -4388, 3915, 1312, -9334, 6263, -6275, -5781, 4330, -5651, -9174, -7775, -650, -8922, -6656, -359, -2977, -6254, 2117, -8011, -2827, 8506, 7388, 498, 6568, -474, 5451, 5206, 960, 7845, 8083, -1734, -1299, -7133, -9025, -4428, -6901, 5978, 1760, 8138, 6611, 7733, -9712, 3966, 4179, -9514, 6806, -4923, 6278, 7034, 1826, -7866, -824, 1324, 3461, 581, 4431, -4287, 2900, 3988, 1658, -4628, 6621, 4928, -5064, 1500, -563, -9650, 2457, -6951, 8488, -6826, -339, -9423, -1839, -2291, 3139, 7059, 2291, 218, -3456, -1574, 6590, 9197, 8414, 4580, 6125, 3580, -5960, -3551, 171, -3737, 4188, 3341, 943, 1666, 6676, 5434, -9759, 2449, -2006, -379, -7495, 7149, -9788, -8621, 1439, -6544, -5133, -7593, 3234, -2400, -9192, -4807};
		
				
		long t1 = System.nanoTime();
		HW02_4110056015_2 T = new HW02_4110056015_2();
		System.out.print(T.F_sum(A));
		System.out.printf("\n%010d",(System.nanoTime()-t1));
	}
	
	public int F_sum(int[] A) {
		sort9c393b(A,0,A.length-1);
		if(A[0]>0 ||A[A.length-1]<0)
			return 0;
		int cnt = 0;
		int left;
		int right;
		int pSum;
		for(int i = 0; A[i]<0 && i<A.length-4;i++) {
			for(int j = i+1;j<A.length-3;j++) {
				pSum = A[i] + A[j];
				if(pSum > -1)
					break;
				left = j+1;
				right = A.length - 1;
				while(left!=right) {
					if(pSum+A[left]+A[right]> 0) {
						right--;
					}else if(pSum+A[left]+A[right]< 0) {
						left++;
					}else {
						cnt++;
						right--;
					}
				}
			}
		}
		return cnt;
	}
	public static void sort9c393b(int[] arr,int left,int right) {
        if(left < right) {
            int i = left;
            int j = right + 1;
            while(true) {
                while( i+1 < arr.length && arr[++i] < arr[left]);
                while( j-1 >= 0 && arr[--j] > arr[left]);
                if( i >= j) break;
                swapf4d4ba(arr,i , j);
            }
            swapf4d4ba(arr,left , j);
            sort9c393b(arr,left , j - 1);
            sort9c393b(arr,j + 1 , right);
            
        }
    }

    public static void swapf4d4ba(int[] arr,int i, int j){
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

}
